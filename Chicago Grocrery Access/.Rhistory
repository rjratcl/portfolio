date_rng <- c(2018, 2019, 2020)
crime_rng <- function(year) {
yr <- year
map_dfr(yr, ~{
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)}
)
}
crime_18_20 <- crime_rng(year = date_rng)
#### DPSS Homework Week 5
#### R. Justin Ratcliffe
#### 12284830
#### Due: August 30th, 2020
### Load tidyverse, diamonds data set for questions 5-7
library(tidyverse)
diamonds <- diamonds
## Question 5
# Create new column "idealcut" in diamonds data set; if the cut is ideal then TRUE, otherwise FALSE
diamonds <- diamonds %>%
mutate(
idealcut = ifelse(cut == "Ideal", TRUE, FALSE)
)
## Question 6
# Compare the difference in means of ideal v. non-ideal cut using a t-test
t.test(diamonds$price[diamonds$idealcut == TRUE], diamonds$price[diamonds$idealcut == FALSE])
# difference in means is statistically significant
## Question 7
# Run a regression with price as the dependent and idealcut, carat, as regressors, include interaction term
# Only return adjusted R squared
dia_reg <- lm(diamonds$price ~ diamonds$carat + diamonds$idealcut + diamonds$carat*diamonds$idealcut)
summary(dia_reg)$adj.r.squared
### Load data for questions 8, 9
library(jsonlite)
## Question 8
crime_url <- read_url("https://data.cityofchicago.org/resource/ijzp-q8t2.json?year=")
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
df <- crime(2002) #to view, function test
## Question 9
date_rng <- c(2018, 2019, 2020)
crime_rng <- function(year) {
yr <- year
map_dfr(yr, ~{
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)}
)
}
crime_18_20 <- crime_rng(year = date_rng)
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
df <- crime(2002) #to view, function test
View(df)
dftst <- crime(2018)
dftst2 <- crime(2019)
dftst3 <- crime(2020)
View(dftst)
View(df)
View(dftst)
View(dftst2)
View(dftst3)
#### DPSS Homework Week 5
#### R. Justin Ratcliffe
#### 12284830
#### Due: August 30th, 2020
### Load tidyverse, diamonds data set for questions 5-7
library(tidyverse)
diamonds <- diamonds
## Question 5
# Create new column "idealcut" in diamonds data set; if the cut is ideal then TRUE, otherwise FALSE
diamonds <- diamonds %>%
mutate(
idealcut = ifelse(cut == "Ideal", TRUE, FALSE)
)
## Question 6
# Compare the difference in means of ideal v. non-ideal cut using a t-test
t.test(diamonds$price[diamonds$idealcut == TRUE], diamonds$price[diamonds$idealcut == FALSE])
# difference in means is statistically significant
## Question 7
# Run a regression with price as the dependent and idealcut, carat, as regressors, include interaction term
# Only return adjusted R squared
dia_reg <- lm(diamonds$price ~ diamonds$carat + diamonds$idealcut + diamonds$carat*diamonds$idealcut)
summary(dia_reg)$adj.r.squared
### Load data for questions 8, 9
library(jsonlite)
## Question 8
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
df <- crime(2002) #to view, function test
## Question 9
date_rng <- c(2018, 2019, 2020)
dftst
crime_rng <- function(year) {
yr <- year
map_dfr(yr, ~{
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)}
)
}
crime_18_20 <- crime_rng(year = date_rng)
dftst <- crime(date_rng)
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, "year"), simplifyVector = TRUE) %>%
select(1:21)
}
df <- crime(2002) #to view, function test
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21) %>%
return()
}
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21) %>%
return()
}
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21) %>%
return(crime)
}
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
date_rng <- c(2018, 2019, 2020)
dftst <- crime(date_rng)
for(i in date_rng){
crime(i)
}
date_rng <- as.date(c(2018, 2019, 2020))
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(y) {
read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21)
}
df <- crime(2002) #to view, function test
View(df)
ate_rng <- c(2018, 2019, 2020)
for(y in date_rng){
crime(y)
}
date_rng <- c(2018, 2019, 2020)
for(y in date_rng){
function(y) {
read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21)
}
}
for(y in date_rng){
crime_18_20 <- function(y) {
read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21) %>%
print()
}
}
for(y in date_rng){
function(y) {
read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21) %>%
print()
}
}
df1 <- for(y in date_rng){
function(y) {
read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21) %>%
print()
}
}
df1 <- for(y in date_rng){
function(y) {
read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21) %>%
print()
} %>%
map_dfr(y, df1)
}
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(y) {
read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21)
}
df <- crime(2002) #to view, function test
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(y) {
tmp <- read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21) %>%
return(tmp)
}
crime <- function(y) {
tmp <- read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21) %>%
return(tmp)
}
crime <- function(y) {
tmp <- read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21) %>%
print(tmp)
}
crime <- function(y) {
tmp <- read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21)
print(tmp)
}
crime <- function(y) {
tmp <- read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21)
print(tmp)
crime(2002)
crime(2002)
crime <- function(y) {
tmp <- read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21)
return(tmp)
}
crime(2002) #to view, function test
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(y) {
read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21)
}
crime(2002) #to view, function test
crime(2002)
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
crime(2002) #to view, function test
#### DPSS Homework Week 5
#### R. Justin Ratcliffe
#### 12284830
#### Due: August 30th, 2020
### Load tidyverse, diamonds data set for questions 5-7
library(tidyverse)
diamonds <- diamonds
## Question 5
# Create new column "idealcut" in diamonds data set; if the cut is ideal then TRUE, otherwise FALSE
diamonds <- diamonds %>%
mutate(
idealcut = ifelse(cut == "Ideal", TRUE, FALSE)
)
## Question 6
# Compare the difference in means of ideal v. non-ideal cut using a t-test
t.test(diamonds$price[diamonds$idealcut == TRUE], diamonds$price[diamonds$idealcut == FALSE])
# difference in means is statistically significant
## Question 7
# Run a regression with price as the dependent and idealcut, carat, as regressors, include interaction term
# Only return adjusted R squared
dia_reg <- lm(diamonds$price ~ diamonds$carat + diamonds$idealcut + diamonds$carat*diamonds$idealcut)
summary(dia_reg)$adj.r.squared
### Load data for questions 8, 9
library(jsonlite)
## Question 8
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
crime(2002) #to view, function test
## Question 9
date_rng <- c(2018, 2019, 2020)
df1 <- for(y in date_rng){
function(y) {
read_json(str_c(crime_url, y), simplifyVector = TRUE) %>%
select(1:21) %>%
print()
}
}
dftst <- crime(date_rng)
crime_rng <- function(year) {
yr <- year
map_dfr(yr, ~{
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)}
)
}
crime_18_20 <- crime_rng(year = date_rng)
#### DPSS Homework Week 5
#### R. Justin Ratcliffe
#### 12284830
#### Due: August 30th, 2020
### Load tidyverse, diamonds data set for questions 5-7
library(tidyverse)
diamonds <- diamonds
## Question 5
# Create new column "idealcut" in diamonds data set; if the cut is ideal then TRUE, otherwise FALSE
diamonds <- diamonds %>%
mutate(
idealcut = ifelse(cut == "Ideal", TRUE, FALSE)
)
## Question 6
# Compare the difference in means of ideal v. non-ideal cut using a t-test
t.test(diamonds$price[diamonds$idealcut == TRUE], diamonds$price[diamonds$idealcut == FALSE])
# difference in means is statistically significant
## Question 7
# Run a regression with price as the dependent and idealcut, carat, as regressors, include interaction term
# Only return adjusted R squared
dia_reg <- lm(diamonds$price ~ diamonds$carat + diamonds$idealcut + diamonds$carat*diamonds$idealcut)
summary(dia_reg)$adj.r.squared
### Load data for questions 8, 9
library(jsonlite)
## Question 8
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
df <- crime(2002) #to view, function test
## Question 9
date_rng <- c(2018, 2019, 2020)
crime_rng <- function(year) {
yr <- year
map_dfr(yr, ~{
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)}
)
}
crime_18_20 <- crime_rng(year = date_rng)
crime(2018)
crime(date_rng)
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
df <- crime(2002) #to view, function test
crime <- function(year) {
tmp <- read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
return(tmp)
}
crime(2013)
crime(date_rng)
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
crime(2013)
crime <- function(year) {
tmp <- read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
as.data.frame(tmp)
}
crime(2013)
?as.data.frame()
crime <- function(year) {
tmp <- read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
str_c(year, "crime") <- return(tmp)
}
crime(2013)
crime <- function(year) {
tmp <- read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
str_c(year, "crime") <- data.frame(tmp)
}
crime(2013)
crime <- function(year) {
tmp <- read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
data.frame(tmp)
}
crime(2013)
#### DPSS Homework Week 5
#### R. Justin Ratcliffe
#### 12284830
#### Due: August 30th, 2020
### Load tidyverse, diamonds data set for questions 5-7
library(tidyverse)
diamonds <- diamonds
## Question 5
# Create new column "idealcut" in diamonds data set; if the cut is ideal then TRUE, otherwise FALSE
diamonds <- diamonds %>%
mutate(
idealcut = ifelse(cut == "Ideal", TRUE, FALSE)
)
## Question 6
# Compare the difference in means of ideal v. non-ideal cut using a t-test
t.test(diamonds$price[diamonds$idealcut == TRUE], diamonds$price[diamonds$idealcut == FALSE])
# difference in means is statistically significant
## Question 7
# Run a regression with price as the dependent and idealcut, carat, as regressors, include interaction term
# Only return adjusted R squared
dia_reg <- lm(diamonds$price ~ diamonds$carat + diamonds$idealcut + diamonds$carat*diamonds$idealcut)
summary(dia_reg)$adj.r.squared
### Load data for questions 8, 9
library(jsonlite)
## Question 8
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
df <- crime(2002) #to view, function test
## Question 9
date_rng <- c(2018, 2019, 2020)
crime_18_20 <- map_dfr(date_rng, crime(date_rng))
crime_18_20 <- map_dfr(date_rng, crime(date_rng), .id = NULL)
crime_18_20 <- map_dfr(
1:3,
sapply(
date_rng, crime())
)
crime_18_20 <- map_dfr(
1:3,
sapply(
date_rng, crime)
)
rlang::last_error()
rlang::last_trace()
crime_18_20 <- map_dfr(
date_rng,
sapply(
date_rng, crime)
)
#### DPSS Homework Week 5
#### R. Justin Ratcliffe
#### 12284830
#### Due: August 30th, 2020
### Load tidyverse, diamonds data set for questions 5-7
library(tidyverse)
diamonds <- diamonds
## Question 5
# Create new column "idealcut" in diamonds data set; if the cut is ideal then TRUE, otherwise FALSE
diamonds <- diamonds %>%
mutate(
idealcut = ifelse(cut == "Ideal", TRUE, FALSE)
)
## Question 6
# Compare the difference in means of ideal v. non-ideal cut using a t-test
t.test(diamonds$price[diamonds$idealcut == TRUE], diamonds$price[diamonds$idealcut == FALSE])
# difference in means is statistically significant
## Question 7
# Run a regression with price as the dependent and idealcut, carat, as regressors, include interaction term
# Only return adjusted R squared
dia_reg <- lm(diamonds$price ~ diamonds$carat + diamonds$idealcut + diamonds$carat*diamonds$idealcut)
summary(dia_reg)$adj.r.squared
### Load data for questions 8, 9
library(jsonlite)
## Question 8
crime_url <- "https://data.cityofchicago.org/resource/ijzp-q8t2.json?year="
crime <- function(year) {
read_json(str_c(crime_url, year), simplifyVector = TRUE) %>%
select(1:21)
}
df <- crime(2002) #test to ensure funtion is working properly
## Question 9
crime_18_20 <- map_dfr(2018:2020, crime)
crime(2013)
install.packages(tmap)
library(sf)
library(tmap)
library(tidyverse)
install.packages("tmap")
install.packages("sf")
library(sf)
library(tmap)
library(tidyverse)
chi_hood <- st_read(ComArea_ACS14_f.shp)
setwd("C:/Users/ratcl/OneDrive/Desktop/School/Chicago/DPSS/DPSS Working Directory")
chi_hood <- st_read(ComArea_ACS14_f.shp)
load("C:/Users/ratcl/OneDrive/Desktop/School/Chicago/DPSS/DPSS Working Directory/ComArea_ACS14_f.dbf")
setwd("C:/Users/ratcl/OneDrive/Desktop/School/Chicago/DPSS/Assignments/Week Six")
### Load libraries
library(sf)
library(tmap)
library(tidyverse)
chicago_nbh <- st_read("ComArea_ACS14_f.shp")
plot(chicago_nbh["ComAreaID"])
chicago_nbh <- chicago_nbh %>% mutate(cpov_density = ChldPov14/shape_area)
plot(chicago_nbh["cpov_density"])
ggplot(chicago_nbh) +
geom_sf(aes(fill = cpov_density))
tm_shape(chicago_nbh) +
tm_polygons("cpov_density")
ggplot(chicago_nbh) +
geom_sf(aes(fill = cpov_density))
tm_shape(chicago_nbh) +
tm_polygons("cpov_density")
ggplot(chicago_nbh) +
geom_sf(aes(fill = cpov_density))
ggplot(chicago_nbh) +
geom_sf(aes(fill = cpov_density)) +
scale_fill_brewer(palette = "YlGn", direction = -1)
# Question 8b
ggplot(chicago_crs) +
geom_sf(aes(fill = cpov_density)) +
geom_sf(data = groceries, size = 0.5, aes(colour = "orange"), direction = -1)
# Question 8b
ggplot(chicago_crs) +
geom_sf(aes(fill = cpov_density)) +
geom_sf(data = groceries, size = 0.5, aes(colour = "orange"))
groceries <- st_read("groceries.shp")
groceries_crs <- st_crs(groceries)
chicago_crs <- st_transform(chicago_nbh, groceries_crs)
# Question 8b
ggplot(chicago_crs) +
geom_sf(aes(fill = cpov_density)) +
geom_sf(data = groceries, size = 0.5, aes(colour = "orange"), direction = -1)
